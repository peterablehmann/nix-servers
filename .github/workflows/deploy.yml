name: deploy

on:
  push:
    branches:
      - "main"

permissions: read-all

jobs:
  Check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5
      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          diagnostic-endpoint: ""
      - name: "Run flake checks"
        run: nix flake check --all-systems

  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5
      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          diagnostic-endpoint: ""
      - name: Check format
        run: nix develop --command bash -c 'treefmt --ci'
      - name: Lint using Statix
        run: nix run nixpkgs#statix -- check .
  
  Deploy:
    needs: [Check, Lint]
    runs-on: ubuntu-latest
    steps:
      - name: Tailscale
        uses: tailscale/github-action@v4
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:gh-actions
      - name: Initialize SSH-Key
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Check out repository code
        uses: actions/checkout@v5
      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          diagnostic-endpoint: ""
      - name: Setup NIX Cache
        uses: zombiezen/setup-nix-cache-action@v0.4.0
        with:
          substituters: s3://nix-cache?endpoint=https://nbg1.your-objectstorage.com
          secret_keys: ${{ secrets.NIX_PRIVATE_KEY }}
          aws_access_key_id: ${{ secrets.CACHE_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.CACHE_SECRET_ACCESS_KEY }}
      - name: Build config
        run: nix develop --command bash -c 'colmena apply push'
      - name: Build DNS config
        run: nix build .#dns
      - name: Deploy DNS config
        run: nix develop --command bash -c 'octodns-sync --config-file result --doit'
        env:
          HETZNER_DNS_API: ${{ secrets.HETZNER_DNS_API }}
      - name: Activate config
        run: nix develop --command bash -c 'colmena apply'
