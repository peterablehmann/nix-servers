{ config
, pkgs
, lib
, ...
}:
with lib;
let
  cfg = config.services.routinator;
  settingsFormat = pkgs.formats.toml { };
in
{
  options.services.routinator = {
    enable = mkEnableOption "Routinator 3000 is free, open-source RPKI Relying Party software made by NLnet Labs.";

    settings = mkOption {
      inherit (settingsFormat) type;
      example = literalExpression ''
        {
          repository-dir = "/var/lib/routinator/rpki-cache";
          rtr-listen = [ "127.0.0.1:3323" ];
          http-listen = [ "127.0.0.1:8323" ];
        }
      '';
      description = ''
        Configuration for Routinator 3000, see <https://routinator.docs.nlnetlabs.nl/en/stable/manual-page.html#configuration-file> for options
      '';
      default = {
        repository-dir = "/var/lib/routinator/rpki-cache";
        rtr-listen = [ "127.0.0.1:3323" ];
        http-listen = [ "127.0.0.1:8323" ];
      };
    };

    configFile = mkOption {
      default = settingsFormat.generate "routinator.conf" cfg.settings;
      defaultText = "A Routinator configuration file automatically generated by values from services.routinator.settings.*";
      type = types.path;
      example = "/etc/routinator/routinator.conf";
      description = "Path to Routinator TOML configuration file.";
    };

    package = mkPackageOption pkgs "routinator" { };
  };

  config = {
    systemd.services.routinator = {
      description = "Routinator 3000 is free, open-source RPKI Relying Party software made by NLnet Labs.";
      wantedBy = [ "multi-user.target" ];
      after = [ "network.target" ];
      path = with pkgs; [ rsync ];
      serviceConfig = {
        ExecStart = "${lib.getExe cfg.package} server ";
        User = "routinator";
        Group = "routinator";
      };
    };

    users.users.routinator = {
      createHome = true;
      isSystemUser = true;
      home = "/var/lib/routinator";
      group = "routinator";
    };
    users.groups.routinator = { };
  };
}
